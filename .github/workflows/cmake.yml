name: CMake

on:
  push:
    branches: [ feature/mjmagee991/github-builds ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    env:
      GCC_ARM_TOOLS_PATH: /usr/bin

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      # Download the compiler
      - name: arm-none-eabi-gcc
        run: sudo apt-get install gcc-arm-none-eabi


      - name: clang-format
        run: |
          sudo apt-get install clang-format-12
          sudo update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-12 10000

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type4
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Apply Formatting and Commit
        run: |
          cmake --build ${{github.workspace}}/build --target clang-format
          if git diff-files --quiet; then
            echo 'No formatting changes'
          else
            echo 'Formatting changes applied:'
            git diff --raw
            git config --global user.email "N/A"
            git config --global user.name "GitHub Build"
            git commit -a -m "Applied Formatting Changes During GitHub Build"
            git push origin
          fi

    # git commit -a -m "Applied clang-format Formatting" && git push origin
